import requests
from requests.auth import HTTPBasicAuth
import uuid
from azure.cosmos import CosmosClient
from datetime import datetime, timezone
import pandas as pd
import json

def fetch_data_from_cosmos(query_start, query_end):
    print("Fetching the data...")
    url = 'https://chatbotuserdata.documents.azure.com:443/'
    key = 'iszzjpdl9oGFY6jmUBlcNAwpHX8XGJZTDZsk0ZmzyP4kY8mNprtAkk573ROFQynUOX797ep2VoFVACDbwmcxBA=='
    database_name = 'askchatbot'
    container_name = 'first'
    cosmoclient = CosmosClient(url, credential=key)
    database = cosmoclient.get_database_client(database_name)
    container = database.get_container_client(container_name)

    query = f"""
    SELECT first.Input, first.output_query, first.text_response, first.table_output
    FROM first
    WHERE first.name = 'test_user'
    AND first.query_time >= '{query_start}'
    AND first.query_time <= '{query_end}'
    """
    items = list(container.query_items(query=query, enable_cross_partition_query=True))

    with pd.ExcelWriter('single_question_output.xlsx', engine='xlsxwriter') as writer:
        for i, data in enumerate(items):
            input_output_df = pd.DataFrame({
                'Input': [data['Input']],
                'Output Query': [data['output_query'] if data['output_query'] != "None" else data['text_response']]
            })
            input_output_df.to_excel(writer, sheet_name=f'Sheet{i+1}', index=False, startcol=0)

            if data['table_output'] != 'None':
                table_output_df = pd.DataFrame(json.loads(data['table_output']))
                table_output_df.to_excel(writer, sheet_name=f'Sheet{i+1}', index=False, startcol=3)
            else:
                none_df = pd.DataFrame({"Message": ["No table output available"]})
                none_df.to_excel(writer, sheet_name=f'Sheet{i+1}', index=False, startcol=3)

    print("Data written to single_question_output.xlsx")

def ask_single_question(question):
    url = "https://testanalytics18mar.azurewebsites.net/gpt-request"
    auth = HTTPBasicAuth('Convobi', 'CBMA@2024')
    userId = "test_user_id"
    userName = "test_user"
    userMail = "test_user_email@example.com"
    uniqueId = str(uuid.uuid4())

    query_start = datetime.now(timezone.utc).isoformat()

    payload = {
        "prompt": question,
        "userId": userId,
        "userName": userName,
        "uniqueId": uniqueId,
        "userMail": userMail
    }

    response = requests.post(url, json=payload, auth=auth)
    if response.status_code == 200:
        print("Request successful.")
    else:
        print(f"Request failed with status code {response.status_code}")

    query_end = datetime.now(timezone.utc).isoformat()
    fetch_data_from_cosmos(query_start, query_end)

# Example usage
if __name__ == "__main__":
    question = input("Enter your question: ")
    ask_single_question(question)
